// <auto-generated />
using AbastFacto.App.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AbastFacto.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AbastFacto.App.Shared.CharacterizationFactor", b =>
                {
                    b.Property<int>("FactorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FactorType")
                        .HasColumnType("int");

                    b.Property<string>("InfoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FactorId");

                    b.ToTable("Factors");

                    b.HasData(
                        new
                        {
                            FactorId = 1,
                            FactorType = 0,
                            Metric = "$/Ha",
                            ShortName = "Costos Producción Cultivos"
                        },
                        new
                        {
                            FactorId = 2,
                            FactorType = 0,
                            Metric = "$/Ha",
                            ShortName = "Precios de la tierra"
                        },
                        new
                        {
                            FactorId = 3,
                            FactorType = 0,
                            Metric = "Ha",
                            ShortName = "Hectáreas Cultivadas"
                        },
                        new
                        {
                            FactorId = 4,
                            FactorType = 0,
                            Metric = "Ha",
                            ShortName = "Disponibilidad de Terrenos"
                        },
                        new
                        {
                            FactorId = 5,
                            FactorType = 0,
                            Metric = "Index NBI",
                            ShortName = "Calidad de Vida"
                        },
                        new
                        {
                            FactorId = 6,
                            FactorType = 0,
                            Metric = "%",
                            ShortName = "Disponibilidad de Terrenos"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
